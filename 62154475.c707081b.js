(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{127:function(e,t,n){"use strict";n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return m}));var a=n(0),r=n.n(a);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=r.a.createContext({}),p=function(e){var t=r.a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},b=function(e){var t=p(e.components);return r.a.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},d=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,o=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),b=p(n),d=a,m=b["".concat(o,".").concat(d)]||b[d]||u[d]||i;return n?r.a.createElement(m,s(s({ref:t},c),{},{components:n})):r.a.createElement(m,s({ref:t},c))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var c=2;c<i;c++)o[c]=n[c];return r.a.createElement.apply(null,o)}return r.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},249:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/unreal-avalon_tools-62b2dbf5da26cbaecd6b5fa73008bd4f.jpg"},250:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/unreal-container-099651983af93581b55a49bfa49081f5.jpg"},94:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return s})),n.d(t,"rightToc",(function(){return l})),n.d(t,"default",(function(){return p}));var a=n(3),r=n(7),i=(n(0),n(127)),o={id:"artist_hosts_unreal",title:"Unreal",sidebar_label:"Unreal"},s={unversionedId:"artist_hosts_unreal",id:"artist_hosts_unreal",isDocsHomePage:!1,title:"Unreal",description:"Introduction",source:"@site/docs/artist_hosts_unreal.md",slug:"/artist_hosts_unreal",permalink:"/docs/artist_hosts_unreal",version:"current",sidebar_label:"Unreal",sidebar:"artist",previous:{title:"Photoshop",permalink:"/docs/artist_hosts_photoshop"},next:{title:"Ftrack",permalink:"/docs/artist_ftrack"}},l=[{value:"Introduction",id:"introduction",children:[{value:"Project naming",id:"project-naming",children:[]}]},{value:"Pype global tools",id:"pype-global-tools",children:[]},{value:"Static Mesh",id:"static-mesh",children:[{value:"Loading",id:"loading",children:[]},{value:"Publishing",id:"publishing",children:[]}]}],c={rightToc:l};function p(e){var t=e.components,o=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(a.a)({},c,o,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h2",{id:"introduction"},"Introduction"),Object(i.b)("p",null,"Pype supports Unreal in similar ways as in other DCCs Yet there are few specific you need to be aware of."),Object(i.b)("h3",{id:"project-naming"},"Project naming"),Object(i.b)("p",null,"Unreal doesn't support project names starting with non-alphabetic character. So names like ",Object(i.b)("inlineCode",{parentName:"p"},"123_myProject")," are\ninvalid. If Pype detects such name it automatically prepends letter ",Object(i.b)("strong",{parentName:"p"},"P")," to make it valid name, so ",Object(i.b)("inlineCode",{parentName:"p"},"123_myProject")," will become ",Object(i.b)("inlineCode",{parentName:"p"},"P123_myProject"),". There is also soft-limit on project name length to be shorter then 20 characters. Longer names will issue warning in Unreal Editor that there might be possible side effects."),Object(i.b)("h2",{id:"pype-global-tools"},"Pype global tools"),Object(i.b)("p",null,"Pype global tools can be found in ",Object(i.b)("em",{parentName:"p"},"Window")," main menu:"),Object(i.b)("p",null,Object(i.b)("img",{alt:"Unreal Pype Menu",src:n(249).default})),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",{parentName:"li",href:"/docs/artist_tools#creator"},"Create")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",{parentName:"li",href:"/docs/artist_tools#loader"},"Load")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",{parentName:"li",href:"/docs/artist_tools#inventory"},"Manage (Inventory)")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",{parentName:"li",href:"/docs/artist_tools#publisher"},"Publish")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",{parentName:"li",href:"/docs/artist_tools#library-loader"},"Library Loader"))),Object(i.b)("h2",{id:"static-mesh"},"Static Mesh"),Object(i.b)("h3",{id:"loading"},"Loading"),Object(i.b)("p",null,"To import Static Mesh model, just choose ",Object(i.b)("strong",{parentName:"p"},"Pype \u2192 Load ...")," and select your mesh. Static meshes are transfered as FBX files as specified in ",Object(i.b)("a",{parentName:"p",href:"https://docs.unrealengine.com/en-US/Engine/Content/Importing/FBX/StaticMeshes/index.html"},"Unreal Engine 4 Static Mesh Pipeline"),". This action will create new folder with subset name (",Object(i.b)("inlineCode",{parentName:"p"},"unrealStaticMeshMain_CON")," for example) and put all data into it. Inside, you can find:"),Object(i.b)("p",null,Object(i.b)("img",{alt:"Unreal Container Content",src:n(250).default})),Object(i.b)("p",null,"In this case there is ",Object(i.b)("strong",{parentName:"p"},"lambert1"),", material pulled from Maya when this static mesh was published, ",Object(i.b)("strong",{parentName:"p"},"unrealStaticMeshCube")," is the geometry itself, ",Object(i.b)("strong",{parentName:"p"},"unrealStaticMeshCube_CON")," is a ",Object(i.b)("em",{parentName:"p"},"AssetContainer")," type and is there to mark this directory as Avalon Container (to track changes) and to hold Pype metadata."),Object(i.b)("h3",{id:"publishing"},"Publishing"),Object(i.b)("p",null,"Publishing of Static Mesh works in similar ways. Select your mesh in ",Object(i.b)("em",{parentName:"p"},"Content Browser")," and ",Object(i.b)("strong",{parentName:"p"},"Pype \u2192 Create ..."),". This will create folder named by subset you've choosen - for example ",Object(i.b)("strong",{parentName:"p"},"unrealStaticMeshDefault_INS"),". It this folder is that mesh and ",Object(i.b)("em",{parentName:"p"},"Avalon Publish Instance")," asset marking this folder as publishable instance and holding important metadata on it. If you want to publish this instance, go ",Object(i.b)("strong",{parentName:"p"},"Pype \u2192 Publish ...")))}p.isMDXComponent=!0}}]);