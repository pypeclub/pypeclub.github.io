(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{112:function(e,t,n){"use strict";n.d(t,"a",(function(){return d})),n.d(t,"b",(function(){return m}));var a=n(0),i=n.n(a);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var c=i.a.createContext({}),b=function(e){var t=i.a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},d=function(e){var t=b(e.components);return i.a.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return i.a.createElement(i.a.Fragment,{},t)}},u=i.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,o=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=b(n),u=a,m=d["".concat(o,".").concat(u)]||d[u]||p[u]||r;return n?i.a.createElement(m,s(s({ref:t},c),{},{components:n})):i.a.createElement(m,s({ref:t},c))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,o=new Array(r);o[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var c=2;c<r;c++)o[c]=n[c];return i.a.createElement.apply(null,o)}return i.a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},179:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/maya-model_hierarchy_example-c94a21a52d41a1d0ef9e814afe5c2624.jpg"},180:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/maya-model_create_instance-9d9797f439007c10eb2f24207c46a021.jpg"},181:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/maya-model_pre_publish-7132bc889e47d653b59ca10f871ae160.jpg"},182:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/maya-model_publish_error-341af14d0f69cf663a72df3e034a470f.jpg"},183:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/maya-model_freeze_error_details-0f3c9ad79e79403836710d7c00173a7e.jpg"},184:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/maya-model_loading-523225ecb12980b7abba01359fa91f78.jpg"},185:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/maya-look_dev-red_buddha-bb9dc5db2c24630232ef1cd51acb42ce.jpg"},186:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/maya-shortcut_buttons-d73e22ff1f2467e3860347bc917c9643.jpg"},187:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/maya-look_dev-look_manager-4a265da9c3d4c9630df6c66d9828a3b9.jpg"},188:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/maya-rig_model_setup-1e486cf5b5c8dd9ae1e8374da78f77dc.jpg"},189:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/maya-rig_hierarchy_example-2f8cb87cf10676d84d6d83e308829752.jpg"},190:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/maya-render_setup-73c9a459b302a057c04c53681f5c6205.jpg"},191:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/maya-renderglobals-d34f1ea46827dc38e2db9734ef3e39c9.jpg"},192:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/maya-render_publish_detail1-1b8e5acf1581e1371576235b52d2b56b.jpg"},193:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/maya-model_review_setup-f08e26badc7ba07a4c19e88ef966689e.jpg"},194:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/maya-yeti_basic_setup-706c11d4feb5fa738c83ddd1e186ea90.jpg"},195:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/maya-yeti_basic_setup_outline-77c843bbdb756edbd269b4fc683ea01d.jpg"},196:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/maya-yeti_cache_attributes-910b71b258bab732a58475fbf41820a1.jpg"},197:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/maya-yeti_rig-fe2756f381d246eafab5bfcbd631d98c.jpg"},70:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return s})),n.d(t,"rightToc",(function(){return l})),n.d(t,"default",(function(){return b}));var a=n(2),i=n(6),r=(n(0),n(112)),o={id:"artist_hosts_maya",title:"Maya",sidebar_label:"Maya"},s={unversionedId:"artist_hosts_maya",id:"artist_hosts_maya",isDocsHomePage:!1,title:"Maya",description:"Pype global tools",source:"@site/docs/artist_hosts_maya.md",slug:"/artist_hosts_maya",permalink:"/docs/artist_hosts_maya",version:"current",sidebar_label:"Maya",sidebar:"artist",previous:{title:"Nuke",permalink:"/docs/artist_hosts_nuke"},next:{title:"Harmony",permalink:"/docs/artist_hosts_harmony"}},l=[{value:"Pype global tools",id:"pype-global-tools",children:[]},{value:"Working with Pype in Maya",id:"working-with-pype-in-maya",children:[]},{value:"Publishing models",id:"publishing-models",children:[{value:"Intro",id:"intro",children:[]},{value:"Creating instance",id:"creating-instance",children:[]},{value:"Publishing models",id:"publishing-models-1",children:[]},{value:"Fixing problems",id:"fixing-problems",children:[]}]},{value:"Look development",id:"look-development",children:[{value:"Loading model",id:"loading-model",children:[]},{value:"Creating look",id:"creating-look",children:[]},{value:"Publishing look",id:"publishing-look",children:[]},{value:"Loading looks into models",id:"loading-looks-into-models",children:[]}]},{value:"Setting scene data",id:"setting-scene-data",children:[]},{value:"Creating rigs with Pype",id:"creating-rigs-with-pype",children:[{value:"Preparing rig for publish",id:"preparing-rig-for-publish",children:[]},{value:"Publishing rigs",id:"publishing-rigs",children:[]},{value:"Loading rigs",id:"loading-rigs",children:[]}]},{value:"Set dressing in Maya",id:"set-dressing-in-maya",children:[{value:"Publishing Set dress / Layout",id:"publishing-set-dress--layout",children:[]},{value:"Loading Set dress / Layout",id:"loading-set-dress--layout",children:[]}]},{value:"Rendering with Pype",id:"rendering-with-pype",children:[{value:"Creating basic render setup",id:"creating-basic-render-setup",children:[]},{value:"Attaching render to subset",id:"attaching-render-to-subset",children:[]}]},{value:"Render Setups",id:"render-setups",children:[{value:"Publishing Render Setups",id:"publishing-render-setups",children:[]},{value:"Loading Render Setups",id:"loading-render-setups",children:[]}]},{value:"Reviews",id:"reviews",children:[{value:"Setting scene for review extraction",id:"setting-scene-for-review-extraction",children:[]},{value:"Publishing model with review",id:"publishing-model-with-review",children:[]}]},{value:"Working with Yeti in Pype",id:"working-with-yeti-in-pype",children:[{value:"Creating and publishing Yeti caches",id:"creating-and-publishing-yeti-caches",children:[]},{value:"Loading Yeti caches",id:"loading-yeti-caches",children:[]},{value:"Creating and publishing Yeti Rig",id:"creating-and-publishing-yeti-rig",children:[]},{value:"Loading Yeti Rig",id:"loading-yeti-rig",children:[]}]}],c={rightToc:l};function b(e){var t=e.components,o=Object(i.a)(e,["components"]);return Object(r.b)("wrapper",Object(a.a)({},c,o,{components:t,mdxType:"MDXLayout"}),Object(r.b)("h2",{id:"pype-global-tools"},"Pype global tools"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(a.a)({parentName:"li"},{href:"/docs/artist_tools#set-context"}),"Set Context")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(a.a)({parentName:"li"},{href:"/docs/artist_tools#workfiles"}),"Work Files")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(a.a)({parentName:"li"},{href:"/docs/artist_tools#creator"}),"Create")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(a.a)({parentName:"li"},{href:"/docs/artist_tools#loader"}),"Load")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(a.a)({parentName:"li"},{href:"/docs/artist_tools#inventory"}),"Manage (Inventory)")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(a.a)({parentName:"li"},{href:"/docs/artist_tools#publisher"}),"Publish")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(a.a)({parentName:"li"},{href:"/docs/artist_tools#library-loader"}),"Library Loader"))),Object(r.b)("h2",{id:"working-with-pype-in-maya"},"Working with Pype in Maya"),Object(r.b)("p",null,"Pype is here to ease you the burden of working on project with lots of\ncollaborators, worrying about naming, setting stuff, browsing through endless\ndirectories, loading and exporting and so on. To achieve that, Pype is using\nconcept of being ",Object(r.b)("em",{parentName:"p"},'"data driven"'),". This means that what happens when publishing\nis influenced by data in scene. This can by slightly confusing so let's get to\nit with few examples."),Object(r.b)("h2",{id:"publishing-models"},"Publishing models"),Object(r.b)("h3",{id:"intro"},"Intro"),Object(r.b)("p",null,"Publishing models in Maya is pretty straightforward. Create your model as you\nneed. You need to adhere to specifications of your studio that can be different\nbetween studios and projects but by default your geometry has to be named properly.\nFor example ",Object(r.b)("inlineCode",{parentName:"p"},"sphere_GEO")," or ",Object(r.b)("inlineCode",{parentName:"p"},"cube1_GEO"),". Geometry needs to have freezed transformations\nand must reside under one group, for example ",Object(r.b)("inlineCode",{parentName:"p"},"model_GRP"),"."),Object(r.b)("p",null,Object(r.b)("img",{alt:"Model example",src:n(179).default})),Object(r.b)("p",null,"Note that ",Object(r.b)("inlineCode",{parentName:"p"},"sphere_GEO")," has frozen transformations."),Object(r.b)("h3",{id:"creating-instance"},"Creating instance"),Object(r.b)("p",null,"Now create ",Object(r.b)("strong",{parentName:"p"},"Model instance")," from it to let Pype know what in the scene you want to\npublish. Go ",Object(r.b)("strong",{parentName:"p"},"Pype \u2192 Create... \u2192 Model")),Object(r.b)("p",null,Object(r.b)("img",{alt:"Model create instance",src:n(180).default})),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"Asset")," field is a name of asset you are working on - it should be already filled\nwith correct name as you've started Maya or switched context to specific asset. You\ncan edit that field to change it to different asset (but that one must already exists)."),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"Subset")," field is a name you can decide on. It should describe what kind of data you\nhave in the model. For example, you can name it ",Object(r.b)("inlineCode",{parentName:"p"},"Proxy")," to indicate that this is\nlow resolution stuff. See ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"artist_concepts#subset"}),"Subset"),"."),Object(r.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(r.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(r.b)("svg",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(r.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"LOD support")),Object(r.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(r.b)("p",{parentName:"div"},"By changing subset name you can take advantage of ",Object(r.b)("em",{parentName:"p"},"LOD support")," in Pype. Your\nasset can contain various resolution defined by different subsets. You can then\nswitch between them very easy using ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"artist_tools#inventory"}),"Inventory (Manage)"),".\nThere LODs are conveniently grouped so they don't clutter Inventory view."),Object(r.b)("p",{parentName:"div"},"Name your subset like ",Object(r.b)("inlineCode",{parentName:"p"},"main_LOD1"),". Important part is that ",Object(r.b)("inlineCode",{parentName:"p"},"_LOD1"),". You can have as many LODs as you need."))),Object(r.b)("p",null,"Read-only field just under it show final subset name, adding subset field to\nname of the group you have selected."),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"Use selection")," checkbox will use whatever you have selected in Outliner to be\nwrapped in Model instance. This is usually what you want. Click on ",Object(r.b)("strong",{parentName:"p"},"Create")," button."),Object(r.b)("p",null,"You'll notice then after you've created new Model instance, there is new set\nin Outliner called after your subset, in our case it is ",Object(r.b)("inlineCode",{parentName:"p"},"modelMain"),"."),Object(r.b)("p",null,"And that's it, you have your first model ready to publish."),Object(r.b)("p",null,"Now save your scene (if you didn't do it already). You will notice that path\nin Save dialog is already set to place where scenes related to modeling task on\nyour asset should reside. As in our case we are working on asset called\n",Object(r.b)("strong",{parentName:"p"},"Ben")," and on task ",Object(r.b)("strong",{parentName:"p"},"modeling"),", path relative to your project directory will be\n",Object(r.b)("inlineCode",{parentName:"p"},"project_XY/assets/ben/work/modeling"),". Let's save our scene as ",Object(r.b)("inlineCode",{parentName:"p"},"model_test_v01"),"."),Object(r.b)("h3",{id:"publishing-models-1"},"Publishing models"),Object(r.b)("p",null,"Now let's publish it. Go ",Object(r.b)("strong",{parentName:"p"},"Pype \u2192 Publish..."),". You will be presented with following window:"),Object(r.b)("p",null,Object(r.b)("img",{alt:"Model publish",src:n(181).default})),Object(r.b)("p",null,"Note that content of this window can differs by your pipeline configuration.\nFor more detail see ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"artist_tools#publisher"}),"Publisher"),"."),Object(r.b)("p",null,"Items in left column are instances you will be publishing. You can disable them\nby clicking on square next to them. Green square indicate they are ready for\npublishing, red means something went wrong either during collection phase\nor publishing phase. Empty one with gray text is disabled."),Object(r.b)("p",null,"See that in this case we are publishing from scene file ",Object(r.b)("inlineCode",{parentName:"p"},"model_test_v01.mb")," in\nMaya model named ",Object(r.b)("inlineCode",{parentName:"p"},"modelMain (ben)")," (next item). Publishing of workfile is\ncurrenly disabled (last item)."),Object(r.b)("p",null,"Right column lists all tasks that are run during collection, validation,\nextraction and integration phase. White items are optional and you can disable\nthem by clicking on them."),Object(r.b)("p",null,"Lets do dry-run on publishing to see if we pass all validators. Click on flask\nicon at the bottom. Validators are run. Ideally you will end up with everything\ngreen in validator section."),Object(r.b)("h3",{id:"fixing-problems"},"Fixing problems"),Object(r.b)("p",null,"To make things interesting, I intentionally forgot to freeze transformations\non ",Object(r.b)("inlineCode",{parentName:"p"},"sphere_GEO")," as I know it will trigger validator designed to check just this."),Object(r.b)("p",null,Object(r.b)("img",{alt:"Failed Model Validator",src:n(182).default})),Object(r.b)("p",null,"You can see our model is now marked red in left column and in right we have\nred box next to ",Object(r.b)("inlineCode",{parentName:"p"},"Transform Zero (Freeze)")," validator."),Object(r.b)("p",null,"You can click on arrow next to it to see more details:"),Object(r.b)("p",null,Object(r.b)("img",{alt:"Failed Model Validator details",src:n(183).default})),Object(r.b)("p",null,"From there you can see in ",Object(r.b)("strong",{parentName:"p"},"Records")," entry that there is problem with ",Object(r.b)("inlineCode",{parentName:"p"},"sphere_GEO"),".\nSome validators have option to fix problem for you or just select objects that\ncause trouble. This is the case with our failed validator."),Object(r.b)("p",null,"In main overview you can notice little up arrow in a circle next to validator\nname. Right click on it and you can see menu item ",Object(r.b)("inlineCode",{parentName:"p"},"select invalid"),". This\nwill select offending object in Maya."),Object(r.b)("p",null,"Fix is easy. Without closing Publisher window we just freeze transformations.\nThen we need to reset it to make it notice changes we've made. Click on arrow\ncircle button at the bottom and it will reset Publisher to initial state. Run\nvalidators again (flask icon) to see if everything is ok."),Object(r.b)("p",null,"It should be now. Write some comment if you want and click play icon button\nwhen ready."),Object(r.b)("p",null,"Publish process will now take its course. Depending on data you are publishing\nit can take a while. You should end up with everything green and message\n",Object(r.b)("strong",{parentName:"p"},"Finished successfully ...")," You can now close publisher window."),Object(r.b)("p",null,"To check for yourself that model is published, open\n",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"artist_tools#loader"}),"Asset Loader")," - ",Object(r.b)("strong",{parentName:"p"},"Pype \u2192 Load..."),".\nThere you should see your model, named ",Object(r.b)("inlineCode",{parentName:"p"},"modelMain"),"."),Object(r.b)("h2",{id:"look-development"},"Look development"),Object(r.b)("p",null,"Look development in Pype is easy. It helps you with versioning different\nkinds of shaders and easy switching between them."),Object(r.b)("p",null,"Let se how it works."),Object(r.b)("h3",{id:"loading-model"},"Loading model"),Object(r.b)("p",null,"In this example I have already published model of Buddha. To see how to publish\nmodel with Pype see ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"artist_hosts_maya#publishing-models"}),"Publishing Model"),"."),Object(r.b)("p",null,"First of lets start with empty scene. Now go ",Object(r.b)("strong",{parentName:"p"},"Pype \u2192 Load...")),Object(r.b)("p",null,Object(r.b)("img",{alt:"Model loading",src:n(184).default})),Object(r.b)("p",null,"Here I am loading ",Object(r.b)("inlineCode",{parentName:"p"},"modelBuddha"),", its version 1 for asset ",Object(r.b)("strong",{parentName:"p"},"foo"),".  Just right-click\non it and select ",Object(r.b)("strong",{parentName:"p"},"Reference (abc)"),". This will load model into scene as alembic.\nNow you can close Loader window."),Object(r.b)("h3",{id:"creating-look"},"Creating look"),Object(r.b)("p",null,"Now you can create whatever look you want. Assign shaders, textures, etc. to model.\nIn my case, I assigned simple Arnolds ",Object(r.b)("em",{parentName:"p"},"aiSurfaceShader")," and changed its color to red."),Object(r.b)("p",null,Object(r.b)("img",{alt:"Look Dev - Red Buddha",src:n(185).default})),Object(r.b)("p",null,"I am quite happy with it so I want to publish it as my first look."),Object(r.b)("h3",{id:"publishing-look"},"Publishing look"),Object(r.b)("p",null,"Select your model in outliner and ho ",Object(r.b)("strong",{parentName:"p"},"Pype \u2192 Create..."),". From there\nselect ",Object(r.b)("strong",{parentName:"p"},"Look"),". Make sure ",Object(r.b)("inlineCode",{parentName:"p"},"use selection")," checkbox is checked.\nMine subset name is ",Object(r.b)("inlineCode",{parentName:"p"},"Main"),". This will create ",Object(r.b)("em",{parentName:"p"},"Look instance")," with a name ",Object(r.b)("strong",{parentName:"p"},"lookMain"),"."),Object(r.b)("p",null,"Close ",Object(r.b)("em",{parentName:"p"},"Creator")," window."),Object(r.b)("p",null,"Now save your scene, give it some sensible name. Next, go ",Object(r.b)("strong",{parentName:"p"},"Pype \u2192 Publish"),".\nThis process is almost identical as publishing models, only different ",Object(r.b)("em",{parentName:"p"},"Validators"),"\nand other plugins will be used."),Object(r.b)("p",null,"This should be painless and cause no trouble so go ahead, click play icon button at\nthe bottom and it will publish your look."),Object(r.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(r.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(r.b)("svg",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(r.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"publishing multiple looks")),Object(r.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(r.b)("p",{parentName:"div"},"You can reference same model into scene multiple times, change materials on every\ninstance with what you need. Then on every model create ",Object(r.b)("em",{parentName:"p"},"Look instance"),". When\npublishing all those ",Object(r.b)("em",{parentName:"p"},"Look instances")," will be published at same time."))),Object(r.b)("h3",{id:"loading-looks-into-models"},"Loading looks into models"),Object(r.b)("p",null,"Now lets see how look are applied. Start new empty scene, load your published\nmodel there as before (using ",Object(r.b)("em",{parentName:"p"},"Reference (abc)"),"). If you didn't notice until now,\nthere are few yellow icons in left shelf:"),Object(r.b)("p",null,Object(r.b)("img",{alt:"Maya - shortcut icons",src:n(186).default})),Object(r.b)("p",null,"Those are shortcuts for ",Object(r.b)("strong",{parentName:"p"},"Look Manager"),", ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/artist_tools#workfiles"}),"Work Files"),",\n",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/artist_tools#loader"}),"Load"),", and ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/artist_tools#inventory"}),"Manage (Inventory)"),"."),Object(r.b)("p",null,"Those can be found even in top menu, but that depends on your studio setup."),Object(r.b)("p",null,"You are interested now in ",Object(r.b)("strong",{parentName:"p"},"Look Manager")," - first item with brush icon. Select\nyour Buddha model and open ",Object(r.b)("strong",{parentName:"p"},"Look Manager"),"."),Object(r.b)("p",null,Object(r.b)("img",{alt:"Maya - Look Manager",src:n(187).default})),Object(r.b)("p",null,"This is ",Object(r.b)("strong",{parentName:"p"},"Look Manager")," window. Yours would be empty until you click ",Object(r.b)("strong",{parentName:"p"},"Get All Assets"),"\nor ",Object(r.b)("strong",{parentName:"p"},"Get Assets From Selection"),". You can use later to quick assign looks if you have\nmultiple assets loaded in scene. Click on one of those button now."),Object(r.b)("p",null,"You should now see all assets and their subsets loaded in scene, and on right side\nall applicable published looks."),Object(r.b)("p",null,"Select you asset and on the right side right click on ",Object(r.b)("inlineCode",{parentName:"p"},"Main")," look. Apply it."),Object(r.b)("p",null,"You notice that Buddha model is now red, materials you've published are now applied\nto it."),Object(r.b)("p",null,"That way you can create looks as you want and version them using Pype."),Object(r.b)("h2",{id:"setting-scene-data"},"Setting scene data"),Object(r.b)("p",null,"Maya settings concerning framerate, resolution and frame range are handled by\nPype. If set correctly in Ftrack, Maya will validate you have correct fps on\nscene save and publishing offering way to fix it for you."),Object(r.b)("p",null,"For resolution and frame range, use ",Object(r.b)("strong",{parentName:"p"},"Pype \u2192 Reset Frame Range")," and\n",Object(r.b)("strong",{parentName:"p"},"Pype \u2192 Reset Resolution")),Object(r.b)("h2",{id:"creating-rigs-with-pype"},"Creating rigs with Pype"),Object(r.b)("p",null,"Creating and publishing rigs with Pype follows similar workflow as with\nother data types. Create your rig and mark parts of your hierarchy in sets to\nhelp Pype validators and extractors to check it and publish it."),Object(r.b)("h3",{id:"preparing-rig-for-publish"},"Preparing rig for publish"),Object(r.b)("p",null,"When creating rigs, it is recommended (and it is in fact enforced by validators)\nto separate bones or driving objects, their controllers and geometry so they are\neasily managed. Currently Pype doesn't allow to publish model at the same time as\nits rig so for demonstration purposes, I'll first create simple model for robotic\narm, just made out of simple boxes and I'll publish it."),Object(r.b)("p",null,Object(r.b)("img",{alt:"Maya - Simple model for rigging",src:n(188).default})),Object(r.b)("p",null,"For more information about publishing models, see ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"artist_hosts_maya#publishing-models"}),"Publishing models"),"."),Object(r.b)("p",null,"Now lets start with empty scene. Load your model - ",Object(r.b)("strong",{parentName:"p"},"Pype \u2192 Load..."),", right\nclick on it and select ",Object(r.b)("strong",{parentName:"p"},"Reference (abc)"),"."),Object(r.b)("p",null,"I've created few bones and their controllers in two separate\ngroups - ",Object(r.b)("inlineCode",{parentName:"p"},"rig_GRP")," and ",Object(r.b)("inlineCode",{parentName:"p"},"controls_GRP"),". Naming is not important - just adhere to\nyour naming conventions."),Object(r.b)("p",null,"Then I've put everything into ",Object(r.b)("inlineCode",{parentName:"p"},"arm_rig")," group."),Object(r.b)("p",null,"When you've prepared your hierarchy, it's time to create ",Object(r.b)("em",{parentName:"p"},"Rig instance")," in Pype.\nSelect your whole rig hierarchy and go ",Object(r.b)("strong",{parentName:"p"},"Pype \u2192 Create..."),". Select ",Object(r.b)("strong",{parentName:"p"},"Rig"),".\nSet is created in your scene to mark rig parts for export. Notice that it has\ntwo subsets - ",Object(r.b)("inlineCode",{parentName:"p"},"controls_SET")," and ",Object(r.b)("inlineCode",{parentName:"p"},"out_SET"),". Put your controls into ",Object(r.b)("inlineCode",{parentName:"p"},"controls_SET"),"\nand geometry to ",Object(r.b)("inlineCode",{parentName:"p"},"out_SET"),". You should end up with something like this:"),Object(r.b)("p",null,Object(r.b)("img",{alt:"Maya - Rig Hierarchy Example",src:n(189).default})),Object(r.b)("h3",{id:"publishing-rigs"},"Publishing rigs"),Object(r.b)("p",null,"Publishing rig is done in same way as publishing everything else. Save your scene\nand go ",Object(r.b)("strong",{parentName:"p"},"Pype \u2192 Publish"),". When you run validation you'll mostly run at first into\nfew issues. Although number of them will seem to be intimidating at first, you'll\nfind out they are mostly minor things easily fixed."),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"Non Duplicate Instance Members (ID)")," - This will most likely fail because when\ncreating rigs, we usually duplicate few parts of it to reuse them. But duplication\nwill duplicate also ID of original object and Pype needs every object to have\nunique ID. This is easily fixed by ",Object(r.b)("strong",{parentName:"p"},"Repair")," action next to validator name. click\non little up arrow on right side of validator name and select ",Object(r.b)("strong",{parentName:"p"},"Repair")," form menu.")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"Joints Hidden")," - This is enforcing joints (bones) to be hidden for user as\nanimator usually doesn't need to see them and they clutter his viewports. So\nwell behaving rig should have them hidden. ",Object(r.b)("strong",{parentName:"p"},"Repair")," action will help here also.")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"Rig Controllers")," will check if there are no transforms on unlocked attributes\nof controllers. This is needed because animator should have ease way to reset rig\nto it's default position. It also check that those attributes doesn't have any\nincoming connections from other parts of scene to ensure that published rig doesn't\nhave any missing dependencies."))),Object(r.b)("h3",{id:"loading-rigs"},"Loading rigs"),Object(r.b)("p",null,"You can load rig with ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/artist_tools#loader"}),"Loader"),". Go ",Object(r.b)("strong",{parentName:"p"},"Pype \u2192 Load..."),",\nselect your rig, right click on it and ",Object(r.b)("strong",{parentName:"p"},"Reference")," it."),Object(r.b)("h2",{id:"set-dressing-in-maya"},"Set dressing in Maya"),Object(r.b)("p",null,"Set dressing is term for easily populate complex scenes with individual parts.\nPype allows to version and manage those sets."),Object(r.b)("h3",{id:"publishing-set-dress--layout"},"Publishing Set dress / Layout"),Object(r.b)("p",null,"Working with Set dresses is very easy. Just load your assets into scene with\n",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/artist_tools#loader"}),"Loader")," (",Object(r.b)("strong",{parentName:"p"},"Pype \u2192 Load..."),"). Populate your scene as\nyou wish, translate each piece to fit your need. When ready, select all imported\nstuff and go ",Object(r.b)("strong",{parentName:"p"},"Pype \u2192 Create...")," and select ",Object(r.b)("strong",{parentName:"p"},"Set Dress")," or ",Object(r.b)("strong",{parentName:"p"},"Layout"),".\nThis will create set containing your selection and marking it for publishing."),Object(r.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(r.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(r.b)("svg",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(r.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"set dress vs layout")),Object(r.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(r.b)("p",{parentName:"div"},"Currently ",Object(r.b)("em",{parentName:"p"},"set dress")," and ",Object(r.b)("em",{parentName:"p"},"layout")," are functionally identical"))),Object(r.b)("p",null,"Now you can publish is with ",Object(r.b)("strong",{parentName:"p"},"Pype \u2192 Publish"),"."),Object(r.b)("h3",{id:"loading-set-dress--layout"},"Loading Set dress / Layout"),Object(r.b)("p",null,"You can load Set dress / Layout using ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/artist_tools#loader"}),"Loader"),"\n(",Object(r.b)("strong",{parentName:"p"},"Pype \u2192 Load..."),"). Select you layout or set dress, right click on it and\nselect ",Object(r.b)("strong",{parentName:"p"},"Reference Maya Ascii (ma)"),". This will populate your scene with all those\nmodels you've put into layout."),Object(r.b)("h2",{id:"rendering-with-pype"},"Rendering with Pype"),Object(r.b)("p",null,"Pype in Maya can be used for submitting renders to render farm and for their\nsubsequent publishing. Right now Pype support ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://www.awsthinkbox.com/deadline"}),"AWS Thinkbox Deadline"),"\nand ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://www.vvertex.com/overview/"}),"Virtual Vertex Muster"),"."),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"For setting up Muster support see ",Object(r.b)("a",Object(a.a)({parentName:"li"},{href:"admin_config#muster"}),"admin section")),Object(r.b)("li",{parentName:"ul"},"For setting up Deadline support see ",Object(r.b)("a",Object(a.a)({parentName:"li"},{href:"admin_config#aws-thinkbox-deadline"}),"here"))),Object(r.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(r.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(r.b)("svg",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(r.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"Muster login")),Object(r.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(r.b)("p",{parentName:"div"},"Muster is now configured so every user must log in to get authentication support. If Pype founds out this token is missing or expired, it will ask again for credentials."))),Object(r.b)("h3",{id:"creating-basic-render-setup"},"Creating basic render setup"),Object(r.b)("p",null,"If you want to submit your render to farm, just follow these simple steps."),Object(r.b)("h4",{id:"preparing-scene"},"Preparing scene"),Object(r.b)("p",null,"Lets start with empty scene. First I'll pull in my favorite Buddha model.\n",Object(r.b)("strong",{parentName:"p"},"Pype \u2192 Load..."),", select model and right+click to pop up context menu. From\nthere just click on ",Object(r.b)("strong",{parentName:"p"},"Reference (abc)"),"."),Object(r.b)("p",null,"Next, I want to be sure that I have same frame range as is set on shot I am working\non. To do this just ",Object(r.b)("strong",{parentName:"p"},"Pype \u2192 Reset Frame Range"),". This should set Maya timeline to same\nvalues as they are set on shot in ",Object(r.b)("em",{parentName:"p"},"Ftrack")," for example."),Object(r.b)("p",null,"I have my time set, so lets create some animation. We'll turn Buddha model around for\n50 frames (this is length of my timeline)."),Object(r.b)("p",null,"Select model, go to first frame, key Y axis rotation, go to last frame, enter 360 to\n",Object(r.b)("strong",{parentName:"p"},"Channel Editor")," Y rotation, key it and its done. If you are not sure how to do it,\nyou are probably reading wrong documentation."),Object(r.b)("p",null,"Now let set up lights, ground and camera. I am lazy so I create Arnolds Skydome light:\n",Object(r.b)("strong",{parentName:"p"},"Arnold \u2192 Lights \u2192 Skydome Light"),". As ground simple Plane will suffice and I'll set\nmy perspective view as I like and create new camera from it (",Object(r.b)("inlineCode",{parentName:"p"},"CTRL+SHIFT+C"),") and rename\nit from ",Object(r.b)("inlineCode",{parentName:"p"},"persp1")," to ",Object(r.b)("inlineCode",{parentName:"p"},"mainCamera"),"."),Object(r.b)("p",null,"One last thing, I'll assign basic ",Object(r.b)("em",{parentName:"p"},"aiSurfaceShader")," to my Buddha and do some little\ntweaks on it."),Object(r.b)("h4",{id:"prepare-scene-for-submission"},"Prepare scene for submission"),Object(r.b)("p",null,"As we have working simple scene we can start preparing it for rendering. Pype is fully utilizing\nRender Setup layers for this. First of all, we need to create ",Object(r.b)("em",{parentName:"p"},"Render instance")," to tell Pype what\nto do with renders. You can easily render locally or on render farm without it, but ",Object(r.b)("em",{parentName:"p"},"Render instance"),"\nis here to mark render layers you want to publish."),Object(r.b)("p",null,"Lets create it. Go ",Object(r.b)("strong",{parentName:"p"},"Pype \u2192 Create..."),". There select ",Object(r.b)("strong",{parentName:"p"},"Render")," from list. If you keep\nchecked ",Object(r.b)("strong",{parentName:"p"},"Use selection")," it will use your current Render Layers (if you have them). Otherwise,\nif no render layers is present in scene, it will create one for you named ",Object(r.b)("strong",{parentName:"p"},"Main")," and under it\ndefault collection with ",Object(r.b)("inlineCode",{parentName:"p"},"*")," selector."),Object(r.b)("p",null,"No matter if you use ",Object(r.b)("em",{parentName:"p"},"Deadline")," or ",Object(r.b)("em",{parentName:"p"},"Muster"),", Pype will try to connect to render farm and\nfetch machine pool list."),Object(r.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(r.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(r.b)("svg",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(r.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"Muster login")),Object(r.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(r.b)("p",{parentName:"div"},"This might fail on ",Object(r.b)("em",{parentName:"p"},"Muster")," in the event that you have expired authentication token. In that case, you'll be presented with login window. Nothing will be created in the scene until you log in again and do create ",Object(r.b)("strong",{parentName:"p"},"Render")," again."))),Object(r.b)("p",null,"So now my scene now looks like this:"),Object(r.b)("p",null,Object(r.b)("img",{alt:"Maya - Render scene Setup",src:n(190).default})),Object(r.b)("p",null,"You can see that it created ",Object(r.b)("inlineCode",{parentName:"p"},"renderingMain")," set and under it ",Object(r.b)("inlineCode",{parentName:"p"},"LAYER_Main"),". This set corresponds to\n",Object(r.b)("strong",{parentName:"p"},"Main")," render layer in Render Setup. This was automatically created because I had not created any\nrender layers in scene before. If you already have layers and you use ",Object(r.b)("strong",{parentName:"p"},"Use selection"),", they will\nappear here, prefixed with ",Object(r.b)("inlineCode",{parentName:"p"},"LAYER_"),". Those layer set are created whenever you create new layer in\nRender Setup and are deleted if you delete layer in Render Setup. However if you delete ",Object(r.b)("inlineCode",{parentName:"p"},"LAYER_")," set,\nlayer in Render Setup isn't deleted. It just means it won't be published."),Object(r.b)("p",null,"Creating ",Object(r.b)("em",{parentName:"p"},"Render instance")," will also set image prefix in render settings to Pype defaults based on\nrenderer you use - for example if you render with Arnold, it is ",Object(r.b)("inlineCode",{parentName:"p"},"maya/<Scene>/<RenderLayer>/<RenderLayer>_<RenderPass>"),"."),Object(r.b)("p",null,"There are few setting on ",Object(r.b)("em",{parentName:"p"},"Render instance")," ",Object(r.b)("inlineCode",{parentName:"p"},"renderingMain")," in ",Object(r.b)("strong",{parentName:"p"},"Attributes Editor"),":"),Object(r.b)("p",null,Object(r.b)("img",{alt:"Maya - Render attributes",src:n(191).default})),Object(r.b)("p",null,"Few options that needs explaining:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"Primary Pool")," - here is list of pool fetched from server you can select from."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"Suspend publish Job")," - job sent to farm will not start render automatically\nbut is in ",Object(r.b)("em",{parentName:"li"},"waiting")," state."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"Extend Frames")," - if checked it will add new frames to previous render, so you can\nextend previous image sequence."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"Override Existing Frame")," - will overwrite file in destination if they exists"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"Priority")," is priority of job on farm"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"Frames Per Task")," is number of sequence division between individual tasks (chunks)\nmaking one job on farm.")),Object(r.b)("p",null,"Now if you run publish, you notice there is in right column new item called\n",Object(r.b)("inlineCode",{parentName:"p"},"Render Layers")," and in it there is our new layer ",Object(r.b)("inlineCode",{parentName:"p"},"Main (999_abc_0010) [1-10]"),". First part is\nlayer name, second ",Object(r.b)("inlineCode",{parentName:"p"},"(999_abc_0010)")," is asset name and rest is frame range."),Object(r.b)("p",null,Object(r.b)("img",{alt:"Maya - Render Publish errors",src:n(192).default})),Object(r.b)("p",null,"You see I already tried to run publish but was stopped by few errors. Lets go\nthrough them one by one just to see what we need to set up further in scene for\nsuccessful publish."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"No Default Cameras Renderable")," is telling me:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-fix"}),"Renderable default cameras found: [u'|persp|perspShape']\n")),Object(r.b)("p",null,"and so can be resolved by simple change in ",Object(r.b)("em",{parentName:"p"},"Main")," layer render settings.\nAll I have to do is just remove the ",Object(r.b)("inlineCode",{parentName:"p"},"persp")," camera from render settings and add there correct camera."),Object(r.b)("p",null,"This leaves me only with ",Object(r.b)("strong",{parentName:"p"},"Render Settings")," error. If I click on it to see\ndetails, I see it has problem with animation not being enabled:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-fix"}),"Animation needs to be enabled. Use the same frame for start and end to render single frame\n")),Object(r.b)("p",null,"Go to ",Object(r.b)("strong",{parentName:"p"},"Render Settings"),", select your render layer and in ",Object(r.b)("strong",{parentName:"p"},"Common")," tab change\nin ",Object(r.b)("strong",{parentName:"p"},"File Output")," ",Object(r.b)("inlineCode",{parentName:"p"},"Frame/Animation ext")," to whatever you want, just not ",Object(r.b)("em",{parentName:"p"},"Single Frame"),".\nSet ",Object(r.b)("strong",{parentName:"p"},"Frame Range")," ",Object(r.b)("inlineCode",{parentName:"p"},"Start frame")," and ",Object(r.b)("inlineCode",{parentName:"p"},"End frame")," according your needs."),Object(r.b)("p",null,"If you run into problems with ",Object(r.b)("em",{parentName:"p"},"image file prefix")," - this should be set correctly when\ncreating ",Object(r.b)("em",{parentName:"p"},"Render instance"),", but you can tweak it. It needs to begin with ",Object(r.b)("inlineCode",{parentName:"p"},"maya/<Scene>")," token\nto avoid render conflicts between DCCs. It needs to have ",Object(r.b)("inlineCode",{parentName:"p"},"<RenderLayer>")," or ",Object(r.b)("inlineCode",{parentName:"p"},"<Layer>")," (vray) and\n",Object(r.b)("inlineCode",{parentName:"p"},"<RenderPass>")," or ",Object(r.b)("inlineCode",{parentName:"p"},"<Aov>")," (vray). If you have more then one renderable cameras, add ",Object(r.b)("inlineCode",{parentName:"p"},"<Camera>")," token."),Object(r.b)("p",null,"Sane default for arnold, redshift or renderman is:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-fix"}),"maya/<RenderLayer>/<RenderLayer>_<RenderPass>\n")),Object(r.b)("p",null,"and for vray:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-fix"}),"maya/<Layer>/<Layer>\n")),Object(r.b)("p",null,"Doing ",Object(r.b)("strong",{parentName:"p"},"Pype \u2192 Reset Resolution")," will set correct resolution on camera."),Object(r.b)("p",null,"Scene is now ready for submission and should publish without errors."),Object(r.b)("div",{className:"admonition admonition-tip alert alert--success"},Object(r.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(r.b)("svg",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"}),Object(r.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"})))),"what happens when I publish my render scene")),Object(r.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(r.b)("p",{parentName:"div"},"When publishing is finished, job is created on farm. This job has one more dependent job connected to itself.\nWhen render is finished, this other job triggers in and run publish again, but this time it is publishing rendered image sequence and creating quicktime movie for preview from it. Only those rendered sequences that have ",Object(r.b)("strong",{parentName:"p"},"beauty")," AOV get preview as it doesn't make sense to make it for example from cryptomatte."))),Object(r.b)("h3",{id:"attaching-render-to-subset"},"Attaching render to subset"),Object(r.b)("p",null,"You can create render that will be attached to another subset you are publishing, rather than being published on it's own. Let's assume, you want to render a model turnaround.\nIn the scene from where you want to publish your model create ",Object(r.b)("em",{parentName:"p"},"Render subset"),". Prepare your render layer as needed and then drag\nmodel subset (maya set node) under corresponding ",Object(r.b)("inlineCode",{parentName:"p"},"LAYER_")," set under ",Object(r.b)("em",{parentName:"p"},"Render instance"),". During publish, it will submit this render to farm and\nafter it is rendered, it will be attached to your model subset."),Object(r.b)("h2",{id:"render-setups"},"Render Setups"),Object(r.b)("h3",{id:"publishing-render-setups"},"Publishing Render Setups"),Object(r.b)("p",null,"Pype can publish whole ",Object(r.b)("strong",{parentName:"p"},"Render Settings")," setup. You can then version in and load it to\nany Maya scene. This helps TDs to distribute per asset/shots render settings for Maya."),Object(r.b)("p",null,"To publish render settings, go ",Object(r.b)("strong",{parentName:"p"},"Pype \u2192 Create...")," and select ",Object(r.b)("strong",{parentName:"p"},"Render Setup Preset"),"."),Object(r.b)("p",null,"In your scene will appear set ",Object(r.b)("inlineCode",{parentName:"p"},"rendersetup<subset>"),". This one has no settings, only its presence\nin scene will trigger publishing of render settings."),Object(r.b)("p",null,"When you publish scene, current settings in ",Object(r.b)("strong",{parentName:"p"},"Render Settings")," will be serialized to json file."),Object(r.b)("h3",{id:"loading-render-setups"},"Loading Render Setups"),Object(r.b)("p",null,"In any scene, you can load published render settings with ",Object(r.b)("strong",{parentName:"p"},"Pype \u2192 Load..."),". Select your published\nrender setup settings, right+click on it and select ",Object(r.b)("strong",{parentName:"p"},"Load RenderSetup template"),"."),Object(r.b)("p",null,"This will load and parse json file and apply all setting there to your Render Setting."),Object(r.b)("div",{className:"admonition admonition-warning alert alert--danger"},Object(r.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(r.b)("svg",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"}),Object(r.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"})))),"warning")),Object(r.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(r.b)("p",{parentName:"div"},"This will overwrite all setting you already have."))),Object(r.b)("h2",{id:"reviews"},"Reviews"),Object(r.b)("p",null,"Pype supports creating review video for almost any type of data you want to publish.\nWhat we call review video is actually ",Object(r.b)("em",{parentName:"p"},"playblast")," or ",Object(r.b)("em",{parentName:"p"},"capture")," (depending on terminology\nyou are familiar with) made from pre-defined camera in scene. This is very useful\nin cases where you want to add turntable preview of your model for example. But it can\nbe used to generate preview for animation, simulations, and so on."),Object(r.b)("h3",{id:"setting-scene-for-review-extraction"},"Setting scene for review extraction"),Object(r.b)("p",null,"Lets see how review publishing works on simple scene. We will publish model with\nturntable preview video."),Object(r.b)("p",null,"I'll be using Stanford University dragon model. Start with empty scene.\nCreate your model, import it or load from Pype. I'll just import model as OBJ\nfile."),Object(r.b)("p",null,"After we have our model in, we need to set everything to be able to publish it\nas model - for detail see ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"artist_hosts_maya#publishing-models"}),"Publishing models"),"."),Object(r.b)("p",null,"To recap - freeze transforms, rename it to ",Object(r.b)("inlineCode",{parentName:"p"},"dragon_GEO")," and put it into group\n",Object(r.b)("inlineCode",{parentName:"p"},"dragon_GRP"),". Then select this group and ",Object(r.b)("strong",{parentName:"p"},"Pype \u2192 Create...")," and choose ",Object(r.b)("strong",{parentName:"p"},"Model"),"."),Object(r.b)("p",null,"Now, lets create camera we need to generate turntable video. I prefer to animate\ncamera itself and not model because all animation keys will be associated with camera\nand not model we want to publish."),Object(r.b)("p",null,"I've created camera, named it ",Object(r.b)("inlineCode",{parentName:"p"},"reviewCamera")," and parent it under ",Object(r.b)("inlineCode",{parentName:"p"},"reviewRotation_LOC"),"\nlocator. I set my timeline to 50 frames, key ",Object(r.b)("inlineCode",{parentName:"p"},"reviewRotation_LOC")," Y axis on frame\n1 to 0 and on frame 50 to 360. I've also set animation curve between those two keys\nto linear."),Object(r.b)("p",null,"To mark camera to be used for review, select camera ",Object(r.b)("inlineCode",{parentName:"p"},"reviewCamera")," and go ",Object(r.b)("strong",{parentName:"p"},"Pype \u2192 Create..."),"\nand choose ",Object(r.b)("strong",{parentName:"p"},"Review"),"."),Object(r.b)("p",null,"This will create set ",Object(r.b)("inlineCode",{parentName:"p"},"review<subset>")," including selected camera. You can set few options\non this set to control review video generation:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"Active")," - control on/off state"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"Frame Start")," - starting frame for review"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"Frame End")," - end frame for review"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"Handles")," - number of handle frame before and after"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"Step")," - number of steps"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"Fps")," - framerate")),Object(r.b)("p",null,"This is my scene:"),Object(r.b)("p",null,Object(r.b)("img",{alt:"Maya - Review model setup",src:n(193).default})),Object(r.b)("p",null,Object(r.b)("em",{parentName:"p"},"* note that I had to fix UVs and normals on Stanford dragon model as it wouldn't pass\nmodel validators")),Object(r.b)("h3",{id:"publishing-model-with-review"},"Publishing model with review"),Object(r.b)("p",null,"You can now publish your model and generate review video. Go ",Object(r.b)("strong",{parentName:"p"},"Pype \u2192 Publish..."),",\nvalidate if you will, and publish it. During publishing, Maya will create ",Object(r.b)("em",{parentName:"p"},"playblast"),"\nfor whole frame range you've specified, then it will pass those frames to ",Object(r.b)("em",{parentName:"p"},"ffmpeg"),".\nThat will create video file, pass it to another extractor creating burnins in it\nand finally uploading this video to ftrack with your model (or other type) published\nversion. All parts of this process - like what burnins, what type of video file,\nsettings for Maya playblast - can be customized by your TDs. For more information\nabout customizing review process refer to ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"admin_presets_plugins"}),"admin section"),"."),Object(r.b)("h2",{id:"working-with-yeti-in-pype"},"Working with Yeti in Pype"),Object(r.b)("p",null,"Pype can work with ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://peregrinelabs.com/yeti/"}),"Yeti")," in two data modes.\nIt can handle Yeti caches and Yeti rigs."),Object(r.b)("h3",{id:"creating-and-publishing-yeti-caches"},"Creating and publishing Yeti caches"),Object(r.b)("p",null,"Let start by creating simple Yeti setup, just one object and Yeti node. Open new\nempty scene in Maya and create sphere. Then select sphere and go ",Object(r.b)("strong",{parentName:"p"},"Yeti \u2192 Create Yeti Node on Mesh"),"\nOpen Yeti node graph ",Object(r.b)("strong",{parentName:"p"},"Yeti \u2192 Open Graph Editor")," and create setup like this:"),Object(r.b)("p",null,Object(r.b)("img",{alt:"Maya - Yeti Basic Graph",src:n(194).default})),Object(r.b)("p",null,"It doesn't matter what setting you use now, just select proper shape in first\n",Object(r.b)("em",{parentName:"p"},"Import")," node. Select your Yeti node and create ",Object(r.b)("em",{parentName:"p"},"Yeti Cache instance")," - ",Object(r.b)("strong",{parentName:"p"},"Pype \u2192 Create..."),"\nand select ",Object(r.b)("strong",{parentName:"p"},"Yeti Cache"),". Leave ",Object(r.b)("inlineCode",{parentName:"p"},"Use selection")," checked. You should end up with this setup:"),Object(r.b)("p",null,Object(r.b)("img",{alt:"Maya - Yeti Basic Setup",src:n(195).default})),Object(r.b)("p",null,"You can see there is ",Object(r.b)("inlineCode",{parentName:"p"},"yeticacheDefault")," set. Instead of ",Object(r.b)("em",{parentName:"p"},"Default")," it could be named with\nwhatever name you've entered in ",Object(r.b)("inlineCode",{parentName:"p"},"subset")," field during instance creation."),Object(r.b)("p",null,"We are almost ready for publishing cache. You can check basic settings by selecting\nYeti cache set and opening ",Object(r.b)("em",{parentName:"p"},"Extra attributes")," in Maya ",Object(r.b)("strong",{parentName:"p"},"Attribute Editor"),"."),Object(r.b)("p",null,Object(r.b)("img",{alt:"Maya - Yeti Basic Setup",src:n(196).default})),Object(r.b)("p",null,"Those attributes there are self-explanatory, but:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"Preroll"),' is number of frames simulation will run before cache frames are stored.\nThis is usefull to "steady" simulation for example.'),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"Frame Start")," from what frame we start to store cache files"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"Frame End")," to what frame we are storing cache files"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"Fps")," of cache"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"Samples")," how many time samples we take during caching")),Object(r.b)("p",null,"You can now publish Yeti cache as any other types. ",Object(r.b)("strong",{parentName:"p"},"Pype \u2192 Publish"),". It will\ncreate sequence of ",Object(r.b)("inlineCode",{parentName:"p"},".fur")," files and ",Object(r.b)("inlineCode",{parentName:"p"},".fursettings")," metadata file with Yeti node\nsetting."),Object(r.b)("h3",{id:"loading-yeti-caches"},"Loading Yeti caches"),Object(r.b)("p",null,"You can load Yeti cache by ",Object(r.b)("strong",{parentName:"p"},"Pype \u2192 Load ..."),". Select your cache, right+click on\nit and select ",Object(r.b)("strong",{parentName:"p"},"Load Yeti cache"),". This will create Yeti node in scene and set its\ncache path to point to your published cache files. Note that this Yeti node will\nbe named with same name as the one you've used to publish cache. Also notice that\nwhen you open graph on this Yeti node, all nodes are as they were in publishing node."),Object(r.b)("h3",{id:"creating-and-publishing-yeti-rig"},"Creating and publishing Yeti Rig"),Object(r.b)("p",null,"Yeti Rigs are working in similar way as caches, but are more complex and they deal with\nother data used by Yeti, like geometry and textures."),Object(r.b)("p",null,"Let's start by ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"artist_hosts_maya#loading-model"}),"loading")," into new scene some model.\nI've loaded my Buddha model."),Object(r.b)("p",null,"Create select model mesh, create Yeti node - ",Object(r.b)("strong",{parentName:"p"},"Yeti \u2192 Create Yeti Node on Mesh")," and\nsetup similar Yeti graph as in cache example above."),Object(r.b)("p",null,"Then select this Yeti node (mine is called with default name ",Object(r.b)("inlineCode",{parentName:"p"},"pgYetiMaya1"),") and\ncreate ",Object(r.b)("em",{parentName:"p"},"Yeti Rig instance")," - ",Object(r.b)("strong",{parentName:"p"},"Pype \u2192 Create...")," and select ",Object(r.b)("strong",{parentName:"p"},"Yeti Cache"),".\nLeave ",Object(r.b)("inlineCode",{parentName:"p"},"Use selection")," checked."),Object(r.b)("p",null,"Last step is to add our model geometry to rig instance, so middle+drag its\ngeometry to ",Object(r.b)("inlineCode",{parentName:"p"},"input_SET")," under ",Object(r.b)("inlineCode",{parentName:"p"},"yetiRigDefault")," set representing rig instance.\nNote that its name can differ and is based on your subset name."),Object(r.b)("p",null,Object(r.b)("img",{alt:"Maya - Yeti Rig Setup",src:n(197).default})),Object(r.b)("p",null,"Save your scene and ready for publishing our new simple Yeti Rig!"),Object(r.b)("p",null,"Go to publish ",Object(r.b)("strong",{parentName:"p"},"Pype \u2192 Publish")," and run. This will publish rig with its geometry\nas ",Object(r.b)("inlineCode",{parentName:"p"},".ma")," scene, save Yeti node settings and export one frame of Yeti cache from\nthe beginning of your timeline. It will also collect all textures used in Yeti\nnode, copy them to publish folder ",Object(r.b)("inlineCode",{parentName:"p"},"resource")," directory and set ",Object(r.b)("em",{parentName:"p"},"Image search path"),"\nof published node to this location."),Object(r.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(r.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(r.b)("svg",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(r.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"Collect Yeti Cache failure")),Object(r.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(r.b)("p",{parentName:"div"},"If you encounter ",Object(r.b)("strong",{parentName:"p"},"Collect Yeti Cache")," failure during collecting phase, and the error is like"),Object(r.b)("pre",{parentName:"div"},Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-fix"}),"No object matches name: pgYetiMaya1Shape.cbId\n")),Object(r.b)("p",{parentName:"div"},"then it is probably caused by scene not being saved before publishing."))),Object(r.b)("h3",{id:"loading-yeti-rig"},"Loading Yeti Rig"),Object(r.b)("p",null,"You can load published Yeti Rigs as any other thing in Pype - ",Object(r.b)("strong",{parentName:"p"},"Pype \u2192 Load ..."),",\nselect you Yeti rig and right+click on it. In context menu you should see\n",Object(r.b)("strong",{parentName:"p"},"Load Yeti Cache")," and ",Object(r.b)("strong",{parentName:"p"},"Load Yeti Rig")," items (among others). First one will\nload that one frame cache. The other one will load whole rig."),Object(r.b)("p",null,"Notice that although we put only geometry into ",Object(r.b)("inlineCode",{parentName:"p"},"input_SET"),", whole hierarchy was\npulled inside also. This allows you to store complex scene element along Yeti\nnode."),Object(r.b)("div",{className:"admonition admonition-tip alert alert--success"},Object(r.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(r.b)("svg",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"}),Object(r.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"})))),"auto-connecting rig mesh to existing one")),Object(r.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(r.b)("p",{parentName:"div"},"If you select some objects before loading rig it will try to find shapes\nunder selected hierarchies and match them with shapes loaded with rig (published\nunder ",Object(r.b)("inlineCode",{parentName:"p"},"input_SET"),"). This mechanism uses ",Object(r.b)("em",{parentName:"p"},"cbId")," attribute on those shapes.\nIf match is found shapes are connected using their ",Object(r.b)("inlineCode",{parentName:"p"},"outMesh")," and ",Object(r.b)("inlineCode",{parentName:"p"},"outMesh"),". Thus you can easily connect existing animation to loaded rig."))))}b.isMDXComponent=!0}}]);